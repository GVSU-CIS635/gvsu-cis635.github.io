Traceback (most recent call last):
  File "/usr/local/lib/python3.7/site-packages/jupyter_cache/executors/utils.py", line 64, in single_nb_execution
    **kwargs,
  File "/usr/local/lib/python3.7/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.7/site-packages/jupyter_core/utils/__init__.py", line 98, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/local/lib/python3.7/asyncio/base_events.py", line 587, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.7/site-packages/nbclient/client.py", line 706, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/usr/local/lib/python3.7/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/lib/python3.7/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
skewness_before = skew(df["LotArea"])
print(f"Skewness before transformation: {skewness_before}")

# Apply the Box-Cox transformation (boxcox1p)
lambda_value = 0.1  # A commonly used lambda value for Box-Cox in many scenarios
df["Transformed_LotArea"] = boxcox1p(df["LotArea"], lambda_value)

# Calculate the skewness after transformation
skewness_after = skew(df["Transformed_LotArea"])
print(f"Skewness after transformation: {skewness_after}")

# Plotting the original and transformed data
fig, ax = plt.subplots(1, 2, figsize=(12, 3))

sns.histplot(df["LotArea"], ax=ax[0], kde=True, bins=45, element='step', color='blue')
ax[0].set_title("Original Data")
# rotate x-axis labels
for label in ax[0].get_xticklabels():
    label.set_rotation(45)

sns.histplot(df["Transformed_LotArea"], ax=ax[1], kde=True,  bins=45, element='step', color="crimson")
ax[1].set_title("Transformed Data")

plt.show()

------------------

----- stdout -----
Skewness before transformation: 12.195142125084478
Skewness after transformation: 0.4281475593423937
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
[0;32m<ipython-input-4-9b60e213492d>[0m in [0;36m<module>[0;34m[0m
[1;32m     13[0m [0mfig[0m[0;34m,[0m [0max[0m [0;34m=[0m [0mplt[0m[0;34m.[0m[0msubplots[0m[0;34m([0m[0;36m1[0m[0;34m,[0m [0;36m2[0m[0;34m,[0m [0mfigsize[0m[0;34m=[0m[0;34m([0m[0;36m12[0m[0;34m,[0m [0;36m3[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     14[0m [0;34m[0m[0m
[0;32m---> 15[0;31m [0msns[0m[0;34m.[0m[0mhistplot[0m[0;34m([0m[0mdf[0m[0;34m[[0m[0;34m"LotArea"[0m[0;34m][0m[0;34m,[0m [0max[0m[0;34m=[0m[0max[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m,[0m [0mkde[0m[0;34m=[0m[0;32mTrue[0m[0;34m,[0m [0mbins[0m[0;34m=[0m[0;36m45[0m[0;34m,[0m [0melement[0m[0;34m=[0m[0;34m'step'[0m[0;34m,[0m [0mcolor[0m[0;34m=[0m[0;34m'blue'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     16[0m [0max[0m[0;34m[[0m[0;36m0[0m[0;34m][0m[0;34m.[0m[0mset_title[0m[0;34m([0m[0;34m"Original Data"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     17[0m [0;31m# rotate x-axis labels[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;31mAttributeError[0m: module 'seaborn' has no attribute 'histplot'

